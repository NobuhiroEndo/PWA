{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app/components/firebase.js","webpack:///./src/app/components/Notification.js","webpack:///./src/app/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_regeneratorRuntime","e","a","iterator","asyncIterator","u","define","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","type","arg","h","f","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","getMessaging","requestForToken","_ref","_callee","currentToken","_context","getToken","vapidKey","console","log","t0","arguments","_next","_throw","_asyncToGenerator","_slicedToArray","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","Notification","_useState2","useState","title","body","notification","setNotification","handleRequestToken","registration","token","navigator","serviceWorker","register","scope","saveTokenToDatabase","error","_ref2","_callee2","_context2","JSON","stringify","subscription_info","fetch","headers","ok","_x","useEffect","onMessage","payload","_payload$notification","_payload$notification2","err","alert","React","createElement","onClick","container","document","getElementById","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"js/main.c4dd302c18d99c0fb41f.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([17,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCX7V6JgK6dJtC5pkyiWyyvbi_nXuxmSbY\",\n  authDomain: \"pwa-test-endo.firebaseapp.com\",\n  projectId: \"pwa-test-endo\",\n  storageBucket: \"pwa-test-endo.appspot.com\",\n  messagingSenderId: \"1072641905457\",\n  appId: \"1:1072641905457:web:f7eb5d00d6e6799923d610\",\n  measurementId: \"G-65YQB6Q86Q\"\n};\n\ninitializeApp(firebaseConfig);\nconst messaging = getMessaging();\n\nexport const requestForToken = async () => {\n  try {\n    const currentToken = await getToken(messaging, { vapidKey: \"BD4ViSjnDbaROdqtIuw87O3-t641sI3CFhlM5aBiYGqb-3NwKL-sjhpD4OIHhxVuhSG755iqe-jrws8jkDNS6eY\" });\n    if (currentToken) {\n      console.log(\"current token for client: \", currentToken);\n      return currentToken;\n    } else {\n      console.log(\"No registration token available. Request permission to generate one.\");\n      return null;\n    }\n  } catch (err) {\n    console.log(\"An error occurred while retrieving token. \", err);\n    return null;\n  }\n};\n\nexport const onMessageListener = () =>\n  new Promise((resolve) => {\n    onMessage(messaging, (payload) => {\n      console.log(\"payload\", payload);\n      resolve(payload);\n    });\n  });","import React, { useState, useEffect } from \"react\";\nimport { requestForToken, onMessageListener } from \"./firebase\";\n\nconst Notification = () => {\n  const [notification, setNotification] = useState({ title: \"\", body: \"\" });\n\n  const handleRequestToken = async () => {\n    if ('serviceWorker' in navigator) {\n      try {\n        const registration = await navigator.serviceWorker.register('/firebase-messaging-sw.js');\n        console.log('Service Worker registered with scope: ', registration.scope);\n  \n        // トークンを取得\n        const token = await requestForToken();\n        console.log('トークン：', token);\n  \n        if (token) {\n          await saveTokenToDatabase(token); // トークンをバックエンドに保存\n        }\n      } catch (error) {\n        console.error('Service Worker registration failed: ', error);\n      }\n    } else {\n      console.log('Service workers are not supported.');\n    }\n  };\n\n  const saveTokenToDatabase = async (token) => {\n    console.log('受け取ったtoken：',JSON.stringify({ subscription_info: token }));\n    try {\n      const response = await fetch('https://e9eb-240f-53-4827-1-90-62b0-31fc-8c30.ngrok-free.app/api/user_notifications/save_subscription_info/', { // URL を変更\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ subscription_info: token }), // バックエンドが期待するデータ形式に合わせる\n      });\n      if (response.ok) {\n        console.log('Token saved to database');\n      } else {\n        console.error('Failed to save token');\n      }\n    } catch (error) {\n      console.error('Error saving token:', error);\n    }\n  };\n\n  useEffect(() => {\n    onMessageListener()\n      .then((payload) => {\n        setNotification({ title: payload?.notification?.title, body: payload?.notification?.body });\n      })\n      .catch((err) => console.log(\"failed: \", err));\n  }, []);\n\n  useEffect(() => {\n    if (notification?.title) {\n      alert(\"title: \" + notification?.title + \"\\nbody: \" + notification?.body);\n    }\n  }, [notification]);\n\n  return (\n    <div>\n      <button onClick={handleRequestToken}>Request Notification Permission</button>\n    </div>\n  );\n};\n\nexport default Notification;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport Notification from '@/app/components/Notification';\n\n// 'app-root' というIDを持つ要素を取得\nconst container = document.getElementById('app-root');\n\nif (container) {\n    // React 18 の createRoot メソッドを使用してルートを作成\n    const root = ReactDOM.createRoot(container);\n    \n    // Notification コンポーネントをレンダリング\n    root.render(\n        <React.StrictMode>\n            <Notification />\n        </React.StrictMode>\n    );\n} else {\n    console.error('Element with ID \"app-root\" not found.');\n}"],"sourceRoot":""}